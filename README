                         _       ___       __
                        | |     / / |     / /
                        | | /| / /| | /| / / 
                        | |/ |/ / | |/ |/ /  
                        |__/|__/  |__/|__/   


See AUTHORS for the list of contributors.

WW is a GNT-based tool that aims to provide a cross-platform way to examine
open sessions on a *NIX system. WW is an enhanced remake of the classic w(1)
utility, but also displays further information on the users as well as the host
on which it runs and the way in which each session has been created on that
host.

GNT is a GTK-style toolkit built on top of ncurses that provides Text User
Interface (TUI) widgets, windowing and window management facilities. GNT is
currently maintained as part of the Pidgin Instant Messaging client for GNOME
desktops (http://pidgin.im/).

COMPATIBILITY
=============

WW has been tested on the following OS/Platform combinations:
* Solaris 11 (main dev platform)  / x86
* Solaris 10                      / SPARCv9
* NetBSD 5.1                      / AMD64
* Linux (Ubuntu Maverick Meerkat) / VirtualBox VM

DEPENDENCIES
============

WW has dependencies against:

        gnt     - gnt's presence should ensure that the following dependencies
                | common to WW and gnt are satisfied.
                | ---
                | ncurses
                | glib-2.0
                | gobject-2.0
                | gthread-2.0

        libkvm on NetBSD

        CMake   - CMake is only required for building WW

BUILD INSTRUCTIONS
==================

WW uses CMake for source configuration and Makefile generation.
Assuming the WW source files have been extracted in a directory named
'ww_source' relative to the current working directory, WW can be built by
doing:
---
$ mkdir ww_staging
$ cd ww_staging
$ cmake ../ww_source

$ make
---

Do note that depending on your system, you may have to run 'gmake' instead of
'make', as the Makefiles generated by CMake may not play nice with non-GNU
implementations of make.

RUNNING WW
==========

Run 'ww' in the staging directory and you should be presented with a windowed
UI on your terminal or terminal emulator.

When running WW inside a terminal emulator, it is advisable to use a window at
least 110 columns wide and 30 rows high.

You can exit WW by pressing Ctrl-c of Alt-q from within WW.

ROADMAP
=======

* Support for FreeBSD v9 and higher
* Support for OpenBSD
* Ability to view information pertaining to to a remote session's endpoint 
* Multiple session sorting options
* Dynamic refresh of the data displayed
